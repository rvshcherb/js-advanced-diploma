{"version":3,"file":"main.17128f7cc54dd79c63a6.js","mappings":"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","sources":["webpack://js-advanced-diploma/./src/js/GamePlay.js","webpack://js-advanced-diploma/./src/js/utils.js","webpack://js-advanced-diploma/./src/js/themes.js","webpack://js-advanced-diploma/./src/js/Character.js","webpack://js-advanced-diploma/./src/js/PositionedCharacter.js","webpack://js-advanced-diploma/./src/js/Team.js","webpack://js-advanced-diploma/./src/js/generators.js","webpack://js-advanced-diploma/./src/js/characters/Bowman.js","webpack://js-advanced-diploma/./src/js/characters/Swordsman.js","webpack://js-advanced-diploma/./src/js/characters/Magician.js","webpack://js-advanced-diploma/./src/js/MyTeam.js","webpack://js-advanced-diploma/./src/js/characters/Daemon.js","webpack://js-advanced-diploma/./src/js/characters/Vampire.js","webpack://js-advanced-diploma/./src/js/characters/Undead.js","webpack://js-advanced-diploma/./src/js/ComputerTeam.js","webpack://js-advanced-diploma/./src/js/cursors.js","webpack://js-advanced-diploma/./src/js/GameController.js","webpack://js-advanced-diploma/./src/js/GameStateService.js","webpack://js-advanced-diploma/./src/js/app.js"],"sourcesContent":["import { calcHealthLevel, calcTileType } from './utils';\n\nexport default class GamePlay {\n  constructor() {\n    this.boardSize = 8;\n    this.container = null;\n    this.boardEl = null;\n    this.cells = [];\n    this.cellClickListeners = [];\n    this.cellEnterListeners = [];\n    this.cellLeaveListeners = [];\n    this.newGameListeners = [];\n    this.saveGameListeners = [];\n    this.loadGameListeners = [];\n  }\n\n  bindToDOM(container) {\n    if (!(container instanceof HTMLElement)) {\n      throw new Error('container is not HTMLElement');\n    }\n    this.container = container;\n  }\n\n  /**\n   * Draws boardEl with specific theme\n   *\n   * @param theme\n   */\n  drawUi(theme) {\n    this.checkBinding();\n\n    this.container.innerHTML = `\n      <div class=\"controls\">\n        <button data-id=\"action-restart\" class=\"btn\">New Game</button>\n        <button data-id=\"action-save\" class=\"btn\">Save Game</button>\n        <button data-id=\"action-load\" class=\"btn\">Load Game</button>\n      </div>\n      <div class=\"board-container\">\n        <div data-id=\"board\" class=\"board\"></div>\n      </div>\n    `;\n\n    this.newGameEl = this.container.querySelector('[data-id=action-restart]');\n    this.saveGameEl = this.container.querySelector('[data-id=action-save]');\n    this.loadGameEl = this.container.querySelector('[data-id=action-load]');\n\n    this.newGameEl.addEventListener('click', (event) => this.onNewGameClick(event));\n    this.saveGameEl.addEventListener('click', (event) => this.onSaveGameClick(event));\n    this.loadGameEl.addEventListener('click', (event) => this.onLoadGameClick(event));\n\n    this.boardEl = this.container.querySelector('[data-id=board]');\n\n    this.boardEl.classList.add(theme);\n    for (let i = 0; i < this.boardSize ** 2; i += 1) {\n      const cellEl = document.createElement('div');\n      cellEl.classList.add('cell', 'map-tile', `map-tile-${calcTileType(i, this.boardSize)}`);\n      cellEl.addEventListener('mouseenter', (event) => this.onCellEnter(event));\n      cellEl.addEventListener('mouseleave', (event) => this.onCellLeave(event));\n      cellEl.addEventListener('click', (event) => this.onCellClick(event));\n      this.boardEl.appendChild(cellEl);\n    }\n\n    this.cells = Array.from(this.boardEl.children);\n  }\n\n  /**\n   * Draws positions (with chars) on boardEl\n   *\n   * @param positions array of PositionedCharacter objects\n   */\n  redrawPositions(positions) {\n    for (const cell of this.cells) {\n      cell.innerHTML = '';\n    }\n\n    for (const position of positions) {\n      const cellEl = this.boardEl.children[position.position];\n      const charEl = document.createElement('div');\n      charEl.classList.add('character', position.character.type);\n\n      const healthEl = document.createElement('div');\n      healthEl.classList.add('health-level');\n\n      const healthIndicatorEl = document.createElement('div');\n      healthIndicatorEl.classList.add('health-level-indicator', `health-level-indicator-${calcHealthLevel(position.character.health)}`);\n      healthIndicatorEl.style.width = `${position.character.health}%`;\n      healthEl.appendChild(healthIndicatorEl);\n\n      charEl.appendChild(healthEl);\n      cellEl.appendChild(charEl);\n    }\n  }\n\n  /**\n   * Add listener to mouse enter for cell\n   *\n   * @param callback\n   */\n  addCellEnterListener(callback) {\n    this.cellEnterListeners.push(callback);\n  }\n\n  /**\n   * Add listener to mouse leave for cell\n   *\n   * @param callback\n   */\n  addCellLeaveListener(callback) {\n    this.cellLeaveListeners.push(callback);\n  }\n\n  /**\n   * Add listener to mouse click for cell\n   *\n   * @param callback\n   */\n  addCellClickListener(callback) {\n    this.cellClickListeners.push(callback);\n  }\n\n  /**\n   * Add listener to \"New Game\" button click\n   *\n   * @param callback\n   */\n  addNewGameListener(callback) {\n    this.newGameListeners.push(callback);\n  }\n\n  /**\n   * Add listener to \"Save Game\" button click\n   *\n   * @param callback\n   */\n  addSaveGameListener(callback) {\n    this.saveGameListeners.push(callback);\n  }\n\n  /**\n   * Add listener to \"Load Game\" button click\n   *\n   * @param callback\n   */\n  addLoadGameListener(callback) {\n    this.loadGameListeners.push(callback);\n  }\n\n  onCellEnter(event) {\n    event.preventDefault();\n    const index = this.cells.indexOf(event.currentTarget);\n    this.cellEnterListeners.forEach((o) => o.call(null, index));\n  }\n\n  onCellLeave(event) {\n    event.preventDefault();\n    const index = this.cells.indexOf(event.currentTarget);\n    this.cellLeaveListeners.forEach((o) => o.call(null, index));\n  }\n\n  onCellClick(event) {\n    const index = this.cells.indexOf(event.currentTarget);\n    this.cellClickListeners.forEach((o) => o.call(null, index));\n  }\n\n  onNewGameClick(event) {\n    event.preventDefault();\n    this.newGameListeners.forEach((o) => o.call(null));\n  }\n\n  onSaveGameClick(event) {\n    event.preventDefault();\n    this.saveGameListeners.forEach((o) => o.call(null));\n  }\n\n  onLoadGameClick(event) {\n    event.preventDefault();\n    this.loadGameListeners.forEach((o) => o.call(null));\n  }\n\n  static showError(message) {\n    alert(message);\n  }\n\n  static showMessage(message) {\n    alert(message);\n  }\n\n  selectCell(index, color = 'yellow') {\n    this.deselectCell(index);\n    this.cells[index].classList.add('selected', `selected-${color}`);\n  }\n\n  deselectCell(index) {\n    const cell = this.cells[index];\n    cell.classList.remove(...Array.from(cell.classList)\n      .filter((o) => o.startsWith('selected')));\n  }\n\n  showCellTooltip(message, index) {\n    this.cells[index].title = message;\n  }\n\n  hideCellTooltip(index) {\n    this.cells[index].title = '';\n  }\n\n  showDamage(index, damage) {\n    return new Promise((resolve) => {\n      const cell = this.cells[index];\n      const damageEl = document.createElement('span');\n      damageEl.textContent = damage;\n      damageEl.classList.add('damage');\n      cell.appendChild(damageEl);\n\n      damageEl.addEventListener('animationend', () => {\n        cell.removeChild(damageEl);\n        resolve();\n      });\n    });\n  }\n\n  setCursor(cursor) {\n    this.boardEl.style.cursor = cursor;\n  }\n\n  checkBinding() {\n    if (this.container === null) {\n      throw new Error('GamePlay not bind to DOM');\n    }\n  }\n}\n","/**\n * @todo\n * @param index - индекс поля\n * @param boardSize - размер квадратного поля (в длину или ширину)\n * @returns строка - тип ячейки на поле:\n *\n * top-left\n * top-right\n * top\n * bottom-left\n * bottom-right\n * bottom\n * right\n * left\n * center\n *\n * @example\n * ```js\n * calcTileType(0, 8); // 'top-left'\n * calcTileType(1, 8); // 'top'\n * calcTileType(63, 8); // 'bottom-right'\n * calcTileType(7, 7); // 'left'\n * ```\n * */\nexport function calcTileType(index, boardSize) {\n  // TODO: ваш код будет тут\n  if (index === 0) return 'top-left';\n  if (index > 0 && index < boardSize - 1) return 'top';\n  if (index === boardSize - 1) return 'top-right';\n  if (index % boardSize === 0 && index !== boardSize * (boardSize - 1)) return 'left';\n  if (index === boardSize * (boardSize - 1)) return 'bottom-left';\n  if (index > boardSize * (boardSize - 1) && index < boardSize ** 2 - 1) return 'bottom';\n  if (index === boardSize ** 2 - 1) return 'bottom-right';\n  if (index % boardSize === boardSize - 1 && index !== boardSize ** 2 - 1) return 'right';\n  return 'center';\n}\n\nexport function calcHealthLevel(health) {\n  if (health < 15) {\n    return 'critical';\n  }\n\n  if (health < 50) {\n    return 'normal';\n  }\n\n  return 'high';\n}\n","const themes = {\n  prairie: 'prairie',\n  desert: 'desert',\n  arctic: 'arctic',\n  mountain: 'mountain',\n};\n\nexport default themes;\n","/**\n * Базовый класс, от которого наследуются классы персонажей\n * @property level - уровень персонажа, от 1 до 4\n * @property attack - показатель атаки\n * @property defence - показатель защиты\n * @property health - здоровье персонажа\n * @property type - строка с одним из допустимых значений:\n * swordsman\n * bowman\n * magician\n * daemon\n * undead\n * vampire\n */\nexport default class Character {\n  constructor(level = 1, type = 'generic') {\n    this.level = level;\n    this.attack = 0;\n    this.defence = 0;\n    this.health = 50;\n    this.type = type;\n\n    // if (new.target.name === 'Character') {\n    //   throw new Error('\\'Character\\' class usage is not allowed');\n    // }\n  }\n}\n","import Character from './Character';\n\nexport default class PositionedCharacter {\n  constructor(character, position) {\n    if (!(character instanceof Character)) {\n      throw new Error('character must be instance of Character or its children');\n    }\n\n    if (typeof position !== 'number') {\n      throw new Error('position must be a number');\n    }\n\n    this.character = character;\n    this.position = position;\n  }\n}\n","import PositionedCharacter from \"./PositionedCharacter\";\n\n/**\n * Класс, представляющий персонажей команды\n *\n * @todo Самостоятельно продумайте хранение персонажей в классе\n * Например\n * @example\n * ```js\n * const characters = [new Swordsman(2), new Bowman(1)]\n * const team = new Team(characters);\n *\n * team.characters // [swordsman, bowman]\n * ```\n * */\nexport default class Team {\n  // TODO: write your logic here\n  constructor() {\n    this.characters = null;\n    this.unpositionedCharacters = null;\n    this.moveRange = null;\n    this.attackRange = null;\n    this.selectedUnit = null;\n  }\n\n  calcMoveRange(unit) {\n    const stepsArr = [];\n    const { moveOffset } = unit.character;\n    const index = unit.position;\n\n    for (let i = 1; i <= moveOffset; i += 1) {\n      stepsArr.push(index + 8 * i);\n      stepsArr.push(index - 8 * i);\n\n      if (Math.floor(index / 8) === Math.floor((index + i) / 8)) { // Условие проверки переполнения ходов по правой границе игрового поля\n        stepsArr.push(index + i);\n        stepsArr.push(index - 8 * i + i);\n        stepsArr.push(index + 8 * i + i);\n      }\n\n      if (Math.floor(index / 8) === Math.floor((index - i) / 8)) { // Условие проверки переполнения ходов по левой границе игрового поля\n        stepsArr.push(index - i);\n        stepsArr.push(index - 8 * i - i);\n        stepsArr.push(index + 8 * i - i);\n      }\n    }\n\n    this.moveRange = stepsArr.filter((item) => item >= 0 && item <= 63);\n  }\n\n  calcAttackRange(unit) {\n    const attackArr = [];\n    const { attackOffset } = unit.character;\n    const index = unit.position;\n\n    for (let i = 1; i <= attackOffset; i += 1) {\n      attackArr.push(index + 8 * i);\n      attackArr.push(index - 8 * i);\n\n      for (let j = 1; j <= attackOffset; j += 1) {\n        if (Math.floor(index / 8) === Math.floor((index + i) / 8)) { // Условие проверки переполнения ходов по правой границе игрового поля\n          attackArr.push(index + i);\n          attackArr.push((index + i) + 8 * j);\n          attackArr.push((index + i) - 8 * j);\n        }\n\n        if (Math.floor(index / 8) === Math.floor((index - i) / 8)) { // Условие проверки переполнения ходов по левой границе игрового поля\n          attackArr.push(index - i);\n          attackArr.push((index - i) + 8 * j);\n          attackArr.push((index - i) - 8 * j);\n        }\n      }\n    }\n\n    this.attackRange = attackArr.filter((item) => item >= 0 && item <= 63).sort((a, b) => a - b);\n  }\n\n  calcActions(unit) {\n    if (this.characters.length > 0) {\n      this.calcMoveRange(unit);\n      this.calcAttackRange(unit);\n    }\n  }\n\n  generatePositions(team) {\n    const availablePositionSet = new Set();\n    const positions = availablePositionSet[Symbol.iterator]();\n    const positionedCharachters = [];\n\n    while (availablePositionSet.size < team.length) {\n      const random = (8 * Math.floor(Math.random() * 8) + this.sideOffset) + (Math.floor(Math.random() * 2));\n      availablePositionSet.add(random);\n    }\n\n    for (let i = 0; i < team.length; i += 1) {\n      positionedCharachters.push(new PositionedCharacter(team[i], positions.next().value));\n    }\n    return positionedCharachters;\n  }\n\n  placeCharacters(team) {\n    this.characters = this.generatePositions(team);\n  }\n\n  pickUnit(index) {\n    return this.characters.find((item) => item.position === index);\n  }\n\n  checkIfTeamDead() {\n    return this.characters.length <= 0;\n  }\n\n  static checkIfUnitDead(unit, targetTeam) {\n    if (unit.character.health <= 0) {\n      const targetIndex = targetTeam.characters.findIndex((item) => item.position === unit.position);\n      targetTeam.characters.splice(targetIndex, 1);\n      console.log(targetTeam);\n    }\n  }\n\n  static calcDamage(atacker, target) {\n    return Math.max(atacker.character.attack - target.character.defence, atacker.character.attack * 0.1);\n  }\n}\n","/**\n * Формирует экземпляр персонажа из массива allowedTypes со\n * случайным уровнем от 1 до maxLevel\n *\n * @param allowedTypes массив классов\n * @param maxLevel максимальный возможный уровень персонажа\n * @returns генератор, который при каждом вызове\n * возвращает новый экземпляр класса персонажа\n *\n */\nexport function* characterGenerator(allowedTypes, maxLevel) {\n  // TODO: write logic here\n\n  while (true) {\n    const randomCharacter = Math.floor(Math.random() * allowedTypes.length);\n    const randomLevel = Math.floor(Math.random() * maxLevel + 1);\n    yield new allowedTypes[randomCharacter](randomLevel);\n  }\n}\n\n/**\n * Формирует массив персонажей на основе characterGenerator\n * @param allowedTypes массив классов\n * @param maxLevel максимальный возможный уровень персонажа\n * @param characterCount количество персонажей, которое нужно сформировать\n * @returns экземпляр Team, хранящий экземпляры персонажей. Количество персонажей в команде - characterCount\n * */\nexport function generateTeam(allowedTypes, { maxLevel, characterCount }) {\n  const team = [];\n  const getCharacter = characterGenerator(allowedTypes, maxLevel);\n  for (let i = 0; i < characterCount; i += 1) team.push(getCharacter.next().value);\n  // return new Team(team, isEnemy);\n  return team;\n}\n","import Character from \"../Character\";\n\nexport default class Bowman extends Character {\n  constructor(level) {\n    super(level);\n    this.attack = 25;\n    this.defence = 25;\n    this.type = 'bowman';\n    this.moveOffset = 2;\n    this.attackOffset = 2;\n  }\n}\n","import Character from \"../Character\";\n\nexport default class Swardsman extends Character {\n  constructor(level) {\n    super(level);\n    this.attack = 40;\n    this.defence = 10;\n    this.type = 'swordsman';\n    this.moveOffset = 4;\n    this.attackOffset = 1;\n  }\n}\n","import Character from \"../Character\";\n\nexport default class Magician extends Character {\n  constructor(level) {\n    super(level);\n    this.attack = 10;\n    this.defence = 40;\n    this.type = 'magician';\n    this.moveOffset = 1;\n    this.attackOffset = 4;\n  }\n}\n","import Team from \"./Team\";\nimport { generateTeam } from \"./generators\";\n\nimport Bowman from \"./characters/Bowman\";\nimport Swordsman from \"./characters/Swordsman\";\nimport Magician from \"./characters/Magician\";\n\nexport default class MyTeam extends Team {\n  constructor() {\n    super();\n    this.sideOffset = 0;\n    this.allowedTypes = [Bowman, Swordsman, Magician];\n  }\n\n  createTeam() {\n    this.unpositionedCharacters = generateTeam(this.allowedTypes, {\n      maxLevel: 2,\n      characterCount: 4,\n    });\n  }\n\n  upgrade() {\n    this.characters.forEach((element) => {\n      const attack = Math.max(element.character.attack, element.character.attack * ((80 + element.character.health) / 100));\n      element.character.attack = attack;\n\n      const health = (element.character.health + 80) > 100 ? 100 : element.character.health + 80;\n      element.character.health = health;\n\n      const level = element.character.level + 1;\n      element.character.level = level;\n    });\n\n    const upgradedUnits = this.characters.map((unit) => unit.character);\n    this.placeCharacters(upgradedUnits);\n\n    const newUnitsNumber = 4 - this.characters.length;\n    const extraUnits = generateTeam(this.allowedTypes, {\n      maxLevel: 2,\n      characterCount: newUnitsNumber,\n    });\n    const positionedExtraUnits = this.generatePositions(extraUnits);\n    positionedExtraUnits.forEach((unit) => this.characters.push(unit));\n  }\n}\n","import Character from \"../Character\";\n\nexport default class Daemon extends Character {\n  constructor(level) {\n    super(level);\n    this.attack = 10;\n    this.defence = 10;\n    this.type = 'daemon';\n    this.moveOffset = 1;\n    this.attackOffset = 4;\n  }\n}\n","import Character from \"../Character\";\n\nexport default class Vampire extends Character {\n  constructor(level) {\n    super(level);\n    this.attack = 25;\n    this.defence = 25;\n    this.type = 'vampire';\n    this.moveOffset = 1;\n    this.attackOffset = 4;\n  }\n}\n","import Character from \"../Character\";\n\nexport default class Undead extends Character {\n  constructor(level) {\n    super(level);\n    this.attack = 40;\n    this.defence = 10;\n    this.type = 'undead';\n    this.moveOffset = 4;\n    this.attackOffset = 1;\n  }\n}\n","import Team from \"./Team\";\nimport { generateTeam } from \"./generators\";\n\nimport Daemon from \"./characters/Daemon\";\nimport Vampire from \"./characters/Vampire\";\nimport Undead from \"./characters/Undead\";\n\nexport default class ComputerTeam extends Team {\n  constructor() {\n    super();\n    this.sideOffset = 6;\n    this.allowedTypes = [Daemon, Vampire, Undead];\n  }\n\n  createTeam() {\n    this.unpositionedCharacters = generateTeam(this.allowedTypes, {\n      maxLevel: 2,\n      characterCount: 4,\n    });\n  }\n\n  aiAttack(enemyTeam) {\n    const targetIndexArr = enemyTeam.characters.map((item) => item.position);\n    const attacker = this.characters.find((unit) => {\n      this.calcActions(unit);\n      return targetIndexArr.some((item) => this.attackRange.includes(item));\n    });\n    const targetIndex = targetIndexArr.find((position) => this.attackRange.includes(position));\n    const target = enemyTeam.pickUnit(targetIndex);\n\n    return { attacker, target };\n  }\n\n  aiMove() {\n    const character = this.characters[Math.floor(Math.random() * this.characters.length)];\n    this.calcActions(character);\n    const position = this.moveRange[Math.floor(Math.random() * this.moveRange.length)];\n\n    return { character, position };\n  }\n}\n","const cursors = {\n  auto: 'auto',\n  pointer: 'pointer',\n  crosshair: 'crosshair',\n  notallowed: 'not-allowed',\n};\n\nexport default cursors;\n","import themes from \"./themes\";\nimport Team from \"./Team\";\nimport MyTeam from \"./MyTeam\";\nimport ComputerTeam from \"./ComputerTeam\";\nimport cursors from \"./cursors\";\nimport Character from \"./Character\";\n\nexport default class GameController {\n  constructor(gamePlay, stateService) {\n    this.gamePlay = gamePlay;\n    this.stateService = stateService;\n    this.teamPlayer = null;\n    this.teamComputer = null;\n    this.selectedUnit = null;\n    this.level = 0;\n  }\n\n  init() {\n    // TODO: add event listeners to gamePlay events\n    // TODO: load saved stated from stateService\n\n    this.newGame();\n\n    this.gamePlay.addCellEnterListener(this.onCellEnter.bind(this));\n    this.gamePlay.addCellLeaveListener(this.onCellLeave.bind(this));\n    this.gamePlay.addCellClickListener(this.onCellClick.bind(this));\n\n    this.gamePlay.addNewGameListener(this.onNewGameClick.bind(this));\n    this.gamePlay.addSaveGameListener(this.onSaveGameClick.bind(this));\n    this.gamePlay.addLoadGameListener(this.onLoadGameClick.bind(this));\n  }\n\n  refresh() {\n    this.gamePlay.redrawPositions(this.teamPlayer.characters.concat(this.teamComputer.characters));\n  }\n\n  newGame() {\n    this.teamPlayer = new MyTeam();\n    this.teamComputer = new ComputerTeam();\n\n    [this.teamPlayer, this.teamComputer].forEach((team) => {\n      team.createTeam();\n      team.placeCharacters(team.unpositionedCharacters);\n    });\n\n    this.gamePlay.drawUi(Object.values(themes)[this.level]);\n    this.refresh();\n  }\n\n  levelUp() {\n    if (this.level < 3) {\n      this.level += 1;\n      this.teamComputer.createTeam();\n      this.teamComputer.placeCharacters(this.teamComputer.unpositionedCharacters);\n      this.teamPlayer.upgrade();\n      this.gamePlay.drawUi(Object.values(themes)[this.level]);\n      this.refresh();\n    }\n  }\n\n  attack(attacker, target, targetTeam) {\n    const damage = Team.calcDamage(attacker, target);\n    target.character.health -= damage;\n    this.gamePlay.showDamage(target.position, damage)\n      .then(() => [attacker.position, target.position].forEach((item) => this.gamePlay.deselectCell(item)))\n      .then(() => Team.checkIfUnitDead(target, targetTeam))\n      .then(() => targetTeam.checkIfTeamDead())\n      .then((result) => {\n        if (targetTeam === this.teamComputer) {\n          if (result) this.levelUp();\n        } else if (result) {\n          console.log('Game Over');\n        }\n      })\n      .then(() => this.refresh());\n  }\n\n  move() {\n    const { character, position } = this.teamComputer.aiMove();\n    if (character) {\n      character.position = position;\n      this.refresh();\n    }\n  }\n\n  implementAI() {\n    setTimeout(() => {\n      const { attacker, target } = this.teamComputer.aiAttack(this.teamPlayer);\n      if (attacker) {\n        this.gamePlay.selectCell(attacker.position);\n        this.gamePlay.selectCell(target.position, 'red');\n        this.attack(attacker, target, this.teamPlayer);\n      } else {\n        this.move();\n      }\n    }, 1000);\n  }\n\n  onCellClick(index) {\n    if (this.selectedUnit) {\n      if (this.gamePlay.cells[index].children.length > 0) {\n        const clickedUnit = this.teamPlayer.pickUnit(index);\n        if (clickedUnit && clickedUnit !== this.selectedUnit) {\n          // перевыбор игрока\n          this.gamePlay.deselectCell(this.selectedUnit.position);\n          this.selectedUnit = clickedUnit;\n          this.teamPlayer.calcActions(this.selectedUnit);\n          this.gamePlay.selectCell(index);\n        } else if (!clickedUnit) {\n          // атака пользователя\n          if (this.teamPlayer.attackRange.includes(index)) {\n            const targetObj = this.teamComputer.pickUnit(index);\n            this.attack(this.selectedUnit, targetObj, this.teamComputer);\n            this.selectedUnit = null;\n\n            // Действие компьютера\n            this.implementAI();\n          } else {\n            alert('Target is too far for this unit');\n          }\n        }\n      } else if (this.teamPlayer.moveRange.includes(index)) {\n        // перемещение пользователя\n        this.gamePlay.deselectCell(this.selectedUnit.position);\n        this.gamePlay.deselectCell(index);\n        this.selectedUnit.position = index;\n        this.gamePlay.redrawPositions(this.teamPlayer.characters.concat(this.teamComputer.characters));\n        this.selectedUnit = null;\n\n        // Действие компьютера\n        this.implementAI();\n      } else {\n        alert('Position is out of unit\\'s move range');\n      }\n    } else if (this.gamePlay.cells[index].children.length > 0) {\n      const clickedUnit = this.teamPlayer.pickUnit(index);\n      if (clickedUnit) {\n        this.selectedUnit = clickedUnit;\n        this.teamPlayer.calcActions(this.selectedUnit);\n        this.gamePlay.selectCell(index);\n      } else {\n        alert('You are not allowed to choose this character');\n      }\n    } else {\n      alert('Nothing to select');\n    }\n  }\n\n  onCellEnter(index) {\n    if (this.gamePlay.cells[index].children.length > 0) {\n      const hoverUnit = this.teamPlayer.pickUnit(index) ?? this.teamComputer.pickUnit(index);\n      console.log(this.teamComputer);\n      const {\n        level,\n        attack,\n        defence,\n        health,\n      } = hoverUnit.character;\n      this.gamePlay.showCellTooltip(`\\u{1F396}${level} \\u{2694}${attack} \\u{1F6E1}${defence} \\u{2764}${health}`, index);\n    }\n\n    if (this.selectedUnit) {\n      this.gamePlay.setCursor(cursors.notallowed);\n      if (this.gamePlay.cells[index].children.length > 0) {\n        if (this.teamPlayer.pickUnit(index)) {\n          this.gamePlay.setCursor(cursors.pointer);\n        } else if (this.teamPlayer.attackRange.some((item) => item === index)) {\n          this.gamePlay.setCursor(cursors.crosshair);\n          this.gamePlay.selectCell(index, 'red');\n        }\n      } else if (this.teamPlayer.moveRange.some((item) => item === index)) {\n        this.gamePlay.setCursor(cursors.pointer);\n        this.gamePlay.selectCell(index, 'green');\n      }\n    }\n  }\n\n  onCellLeave(index) {\n    this.gamePlay.hideCellTooltip(index);\n    this.gamePlay.setCursor(cursors.auto);\n    if (this.selectedUnit && index !== this.selectedUnit.position) this.gamePlay.deselectCell(index);\n  }\n\n  onNewGameClick() {\n    this.newGame();\n  }\n\n  onSaveGameClick() {\n    const gameState = {\n      teamPlayer: this.teamPlayer,\n      teamComputer: this.teamComputer,\n      level: this.level,\n    };\n\n    this.stateService.save(gameState);\n  }\n\n  onLoadGameClick() {\n    console.log('Game Loaded');\n    const gameState = this.stateService.load();\n    console.log(gameState);\n    this.teamPlayer.characters = gameState.teamPlayer.characters;\n    this.teamComputer.characters = gameState.teamComputer.characters;\n    console.log(this.teamPlayer);\n    Object.setPrototypeOf(this.teamPlayer, new MyTeam());\n    Object.setPrototypeOf(this.teamComputer, new ComputerTeam());\n    this.teamPlayer.characters.forEach((item) => Object.setPrototypeOf(item.character, new Character()));\n    this.teamComputer.characters.forEach((item) => Object.setPrototypeOf(item.character, new Character()));\n    this.level = gameState.level;\n    this.gamePlay.drawUi(Object.values(themes)[this.level]);\n    this.refresh();\n  }\n}\n","export default class GameStateService {\n  constructor(storage) {\n    this.storage = storage;\n  }\n\n  save(state) {\n    this.storage.setItem('state', JSON.stringify(state));\n  }\n\n  load() {\n    try {\n      return JSON.parse(this.storage.getItem('state'));\n    } catch (e) {\n      throw new Error('Invalid state');\n    }\n  }\n}\n","/**\n * Entry point of app: don't change this\n */\nimport GamePlay from './GamePlay';\nimport GameController from './GameController';\nimport GameStateService from './GameStateService';\n\nconst gamePlay = new GamePlay();\ngamePlay.bindToDOM(document.querySelector('#game-container'));\n\nconst stateService = new GameStateService(localStorage);\n\nconst gameCtrl = new GameController(gamePlay, stateService);\ngameCtrl.init();\n\n// don't write your code here\n"],"names":["GamePlay","this","boardSize","container","boardEl","cells","cellClickListeners","cellEnterListeners","cellLeaveListeners","newGameListeners","saveGameListeners","loadGameListeners","HTMLElement","Error","theme","index","checkBinding","innerHTML","newGameEl","querySelector","saveGameEl","loadGameEl","addEventListener","event","onNewGameClick","onSaveGameClick","onLoadGameClick","classList","add","i","cellEl","document","createElement","onCellEnter","onCellLeave","onCellClick","appendChild","Array","from","children","positions","health","position","charEl","character","type","healthEl","healthIndicatorEl","style","width","callback","push","preventDefault","indexOf","currentTarget","forEach","o","call","color","deselectCell","cell","remove","filter","startsWith","message","title","damage","Promise","resolve","damageEl","textContent","removeChild","cursor","alert","prairie","desert","arctic","mountain","Character","level","attack","defence","PositionedCharacter","Team","characters","unpositionedCharacters","moveRange","attackRange","selectedUnit","unit","targetTeam","targetIndex","findIndex","item","splice","console","log","atacker","target","Math","max","stepsArr","moveOffset","floor","attackArr","attackOffset","j","sort","a","b","length","calcMoveRange","calcAttackRange","team","availablePositionSet","Set","Symbol","iterator","positionedCharachters","size","random","sideOffset","next","value","generatePositions","find","characterGenerator","allowedTypes","maxLevel","randomCharacter","randomLevel","generateTeam","characterCount","getCharacter","Bowman","Swardsman","Magician","MyTeam","Swordsman","element","upgradedUnits","map","placeCharacters","newUnitsNumber","extraUnits","Daemon","Vampire","Undead","ComputerTeam","enemyTeam","targetIndexArr","attacker","calcActions","some","includes","pickUnit","GameController","gamePlay","stateService","teamPlayer","teamComputer","newGame","addCellEnterListener","bind","addCellLeaveListener","addCellClickListener","addNewGameListener","addSaveGameListener","addLoadGameListener","redrawPositions","concat","createTeam","drawUi","Object","values","themes","refresh","upgrade","calcDamage","showDamage","then","checkIfUnitDead","checkIfTeamDead","result","levelUp","aiMove","setTimeout","aiAttack","selectCell","move","clickedUnit","targetObj","implementAI","hoverUnit","showCellTooltip","setCursor","cursors","hideCellTooltip","gameState","save","load","setPrototypeOf","GameStateService","storage","state","setItem","JSON","stringify","parse","getItem","e","bindToDOM","localStorage","init"],"sourceRoot":""}